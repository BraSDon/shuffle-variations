# File containing all system related information (things to be configured only once)

# TODO: Think about everything that needs to be configured
# TODO: Specify the format of the file

# NOTE: Local execution must be performed using the following command:
# torchrun --nproc_per_node=4 main.py
system: local # (server | local)

ddp:
  port: 29500 # port for ddp setup

models:
  dummy:
    torch.hub.load:
      repo:
      model:
  ann:
    torch.hub.load:
      repo:
      model:
  alexnet:
    torch.hub.load:
      repo: pytorch/vision:v0.10.0
      model: alexnet
  resnet18:
    torch.hub.load:
      repo: pytorch/vision:v0.10.0
      model: resnet18
  resnet50:
    torch.hub.load:
      repo: pytorch/vision:v0.10.0
      model: resnet50
  nvidia_efficientnet_b0:
    torch.hub.load:
      repo: NVIDIA/DeepLearningExamples:torchhub
      model: nvidia_efficientnet_b0
  deit-base:
    torch.hub.load:
      repo: facebookresearch/deit:main
      model: deit_base_patch_224


# Describe datasets that are available
datasets:
  ImageNet:
    path: /home/datasets/imagenet
    num-classes: 1000
    load-function:
      module: torchvision.datasets
      type: generic # (generic | built-in)
      name: ImageFolder
    transforms:
      train:
        - name: RandomResizedCrop
          kwargs:
            size: 224
        - name: RandomHorizontalFlip
          kwargs: {}
        - name: ToTensor
          kwargs: {}
        - name: Normalize
          kwargs:
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
      test:
        - name: Resize
          kwargs:
            size: 256
        - name: CenterCrop
          kwargs:
            size: 224
        - name: ToTensor
          kwargs: {}
        - name: Normalize
          kwargs:
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]

  CIFAR10:
    path: ./data
    num-classes: 10
    load-function:
      module: torchvision.datasets
      type: built-in
      name: CIFAR10
    transforms:
      train:
        - name: ToTensor
          kwargs: {}
        - name: Normalize
          kwargs:
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
      test:
        - name: ToTensor
          kwargs: {}
        - name: Normalize
          kwargs:
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]

  SUSY:
    path: ./data
    num-classes: 2
    load-function:
      module: src.data
      type: built-in
      name: SUSYDataset